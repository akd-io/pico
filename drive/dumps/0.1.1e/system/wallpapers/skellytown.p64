picotron cartridge // www.picotron.net
version 2

:: gfx/
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTI4LTA1IDA3OjI4OjIwIixtb2RpZmllZD0iMjAyNC0w
My0wNiAwMzo0MTozMyIscmV2aXNpb249Mzk1XV1sejQAUgIAABg1AADzHHtbMF09e2JtcD1weHUA
QyAICATwGRcgBxBHcAcALGZsYWdzPTAscGFuX3gIAOt5PTAsc2NhbGU9MTJ9LDsAnxYHEEcgFyAH
gDsAH58NB0A3EBdQF8A7AB9-BQdgFzAXMD0AI38EB2AXQAdAPQAif6AHYBdQB2A_ACRAkAcABz4A
D0AAJRXAQABPUBdQF3MBHxWwQAAfYEAAJCBQFz4AH3A_ACJfoAdQF3A_ACYh8AM-AA89ACRPCgdQ
NzsAJH8JB3AnMAcgPQAirwAHcEcQByAX8Bk7AB6vgAcgFyBHEAfwFjsAHq-AF1AXEDdAB-ANOwAi
AFkDT2AH8AU9ACIAWQNPYAfwBD0AJBFgYgIfoD4AJn9gB1AHAAeQQAAeVYAXUBdQQAAfwEAAIhVg
QAAfsEAAIhJwmAMPPgAoX3AXUAegPgAkADwAL-ADPQAjXzdQB-AKOwAijyAHMCdwB-AJPQAbXxAQ
BPDwMwC4o2VHkGeABwAnAAcGAK4nACeQR6AHAAcAAAQPUAAQ-wMVFwAXoEegR3AHEEcQB1CH8Ahf
ADlxABdwFzAXcDAD73AHUAdwFyAXgBcgF-AKxwA8hBMXQBdgF0AXYQBfkAcgB6BkADwDewGwN5AH
ACegJwAHsDclBy-wGCsChQ8zACBwE0cAR0AXIMMG-xQ3ADdgByAHIAeAFwAXkAcQBxAHoCfQB9An
kBcQBxAXYIfwI5MAIA8zAP------------------------------------------------------
-9dQPTEyfX0=
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTEwLTA1IDA3OjI4OjIwIixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNTo1OToyMCIsc3RvcmVkPSIyMDI0LTI4LTA1IDA3OjI4OjIwIl1d
:: map/
:: map/0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTU0LTAzIDA0OjU0OjI3Iixtb2RpZmllZD0iMjAyMy01
OC0wMyAwNDo1ODowMSIscmV2aXNpb249MzVdXWx6NABpAAAAowgAAPATe2xheWVyPXtbMF09e2Jt
cD11c2VyZGF0YSgiaTE2IiwxNgMALyIwAQD----voSIpLHBhbl94PTAIAPIGeT0wLHNjYWxlPTEs
dGlsZV9oPTE2CgBvdz0xNn0sSwT-----OFAxNn19fQ==
:: map/map0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTI4LTA1IDA3OjI4OjIwIixtb2RpZmllZD0iMjAyNC0w
My0wNiAwMzo0MTozMyIscmV2aXNpb249MzY3XV1sejQAXQAAAFgEAADwE3tsYXllcj17WzBdPXti
bXA9dXNlcmRhdGEoImkxNiIsMTYDAC8iMAEA----76EiKSxwYW5feD0wCADyBnk9MCxzY2FsZT0x
LHRpbGVfaD0xNgoAcHc9MTZ9fX0=
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTEwLTA1IDA3OjI4OjIwIixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNTo1OToyMCIsc3RvcmVkPSIyMDI0LTI4LTA1IDA3OjI4OjIwIl1d
:: sfx/
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTU0LTAzIDA0OjU0OjI3Iixtb2RpZmllZD0iMjAyMy01
Ny0wMyAwNDo1Nzo0MiIscmV2aXNpb249MzRdXWx6NABvAAAA7QYAAN9weHUAAygAAAMABPD-AQDs
-yfxARAGDyAQASABIAHwAAIQAg4QASAPISABMA9A8MMPKA--8MYP_AoP-w_AD-cPDQHwCQEQBg4w
AP85H-8BANzP_A9AAA8QQP--sPBwCwD--6Mf-wEAl1D-----Hw==
:: sfx/sfx0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTI4LTA1IDA3OjI4OjIwIixtb2RpZmllZD0iMjAyNC0w
My0wNiAwMzo0MTozMyIscmV2aXNpb249MzYyXV1sejQAEAEAAFEHAADwJ3B4dQADKAAAAwAED0AQ
Ag4AAaABIAKgDgAPEAAN8MoBAgMEBQYHAQ--kAgJCgsPDA8NDw4PDxAA8AANDxEPEg8TDxQPFQ8W
DxcTAPEBDxgPGQ8aDxsPHA8dDx4PHxQA8QAgDyEPIg8jDyQPJQ8mDycUAPEAKA8pDyoPKw8sDy0P
Lg8vFADxADAPMQ8yDzMPNA81DzYPNxQA-wU4DzkPOg87DzwPPQ8_Dz8BD--w-wEA6-8nWgEQBg8g
EAEgASAB8AACEAIMEAEgDyEgATAPQPDDDygP--DGD-gKD-8PgA-3Dw0B8AkBEAYMMAD-OR--AQDc
v-gPQAANQP--sPBwCgD--2Qf-wEAl1D-----Hw==
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTEwLTA1IDA3OjI4OjIwIixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNTo1OToyMCIsc3RvcmVkPSIyMDI0LTI4LTA1IDA3OjI4OjIwIl1d
:: bones.lua
--[[pod_format="raw",created="2024-32-05 07:32:38",modified="2024-03-06 03:41:33",revision=417]]
--[[

	

]]

function bone(x,y,a)
 local l =7
 local b=66
 
 a+=1/28
 a%=1
 local q= flr(a*4) -- 0..3 -- which group of 7
 local ofs={[0]=
  1,5, 5,5, 5,1, 1,1
 }
 
 --line(x,y,x+cos(a)*l,y+sin(a)*l, 14)

 local i=flr((a%0.25)*28)
 b = flr(a*28)
 x-=ofs[q*2+0]
 y-=ofs[q*2+1]

 spr(b,x,y)
 
end


function draw_skelly(s)

	local a=s.pose
	local sx=0
	local sy=0
	local x,y
	local l=7
	local ll=8 -- leg length

	pdat={[0]=
		{7,-6,7},
		{-8,-6,7},
		{3,6,8},
		{-4,6,8}
	}

	--circfill(s.x, s.y, 2,8)
	
	-- calc lowest foot

	lx = 0
	ly = sy + 10 -- hip bone
	li = 0
	for i=2,3 do
		local d=pdat[i]
		local x=sx+d[1] 
		local y=sy+d[2]+0 -- hip

		x+=cos(a[i*2])*d[3] 
		y+=sin(a[i*2])*d[3]
		x+=cos(a[i*2+1])*d[3] 
		y+=sin(a[i*2+1])*d[3]

		ly = max(ly,y)
		if (i==2 or ly==y) then
			lx=x
			li=i
		end
	end
 
	-- adjust
	sy -= (ly - 22)


	if (not s.llx) s.llx=0
	if (s.ci != li) then
		-- plant anchor foot 
		-- .cx means anchor relative to starting position (not 'center')
		s.cx = lx + (s.cx - s.llx)
		s.ci = li
	end
	 
	s.llx=lx -- last lowest x
	sx -= (lx - s.cx)
	sx += s.x
	sy += s.y
 

	-- body
	spr(40,sx-8, sy-8)

	-- head
	spr(s.head,sx-7+s.hx,sy-21+s.hy)

	-- bunny head (easter)
	--spr(43,sx-3+s.hx,sy-14+s.hy-8,1.25,2)
	
	for i=0,3 do
		local d=pdat[i]
		x=sx+d[1] y=sy+d[2]

		bone(x,y,a[i*2],i*2+0)

		x+=cos(a[i*2])*d[3] 
		y+=sin(a[i*2])*d[3]

		if (i ~= s.missing_bone) then
			bone(x,y,a[i*2+1],i*2+1)
		end

	end

end




:: main.lua
--[[pod_format="raw",created="2024-28-05 07:28:20",modified="2024-03-06 03:41:33",revision=480]]

include"bones.lua"
include"pose.lua"

	
	
function _init()

	skel={}
	
	for y=0,4 do
	for x=0,5-(y%2) do
	
	local s = add(skel,{
		ci=-1,cx=0,
		x=36 + x * 80 + (y%2)*40, 
		y=36 + y * 50,
		hx=0, hy=0,
		b = defpose(),
		next_t=0,
		tp={[0]=0,0,0,0, 0,0,0,0, 0},
		head = 32
	})
	
	if (rnd(20)<1) s.head = 33 -- rare hat
	if (rnd(20)<1) s.head = 36 -- chipped skull
	if (rnd(10)<1) s.missing_bone = rnd{0,1} -- missing lower arm
	
	if (rnd(10)<1 and date():sub(1,10)=="2024-03-06") s.head = 34
	
	s.pose = defpose(1)
	s.tp   = makepose(rnd(5)\1) -- target pose

	end 
	end
	
end


function _draw()
	cls(theme"desktop0")
	
	pal(7,theme"desktop1")
	for i=1,#skel do
		draw_skelly(skel[i])
	end
	
end

function _update()

	
	local mx, my, mb = mouse()
	
	for i=1,#skel do
		local s = skel[i]
		chpose(s.pose,s.tp, 0.3)
		
		local dx = mx - s.x
		local dy = my - s.y
		
		if (dx*dx+dy*dy < 400) then
			if not s.hover or (last_mb == 0 and mb > 0) then
				-- choose new random pose
				if (rnd(4) > 1) then
					s.tp   = makepose(rnd(5)\1)
					if (rnd(2)<1) flip_pose(s.tp) -- variation
				else
					-- flip
					flip_pose(s.tp)
				end
			end
			s.hover = true
		else
			s.hover = false
		end
	end
	
	last_mb = mb
end




:: pose.lua
--[[pod_format="raw",created="2024-49-05 07:49:57",modified="2024-03-06 03:41:33",revision=332]]


function defpose()
	return {[0]=
	  0.7,0.9,
	  -0.3,-0.4,
	  0.85,0.75,
	  0.65,0.75,
	  0
	 }
end

function makepose(n)

 n=flr(n)
 

	local pdat={[0]=
	
	 -- def
	 {[0]=
		  0.85,0.75,
		  -0.3,0.75,
		  0.85,0.7,
		  0.65,0.7,
		  0
		 },
		 
	 -- 1. arms down
		{[0]=
		  0.80,0.90,
		  0.70,0.60,
		  0.95,0.95,
		  0.55,0.85,
		  0
		 }, 
		 
		-- 2 russian
		-- (arms wave)
		{[0]=
		  0.20,0.35,
		  0.45,0.60,
		  0.95,0.95,
		  0.55,0.85,
		  0
		 }, 
		
		-- 3 stompy
		-- (arms open -- hey ho)
		{[0]=
		  0.0,0.15,
		  0.35,0.25,
		  0.75,0.75,
		  0.45,0.65,
		  0
		 },
		 
		-- 4 arms up
		{[0]=
		  0.25,0.35,
		  0.25,0.15,
		  0.75,0.75,
		  0.6,0.6,
		  0
		 },
		 
		
	}
	
	n=n%(#pdat+1)

 local p={}
 for i=0,8 do
  p[i]=pdat[n][i]
 end

	return p
end



-- chase pose
function chpose(p0,p1,q)
 for i=0,7 do
  local a0=p0[i]
  local a1=p1[i]
  a0%=1 a1%=1
  if (abs(a0-a1)>0.5) then
   a0+=sgn(a1-a0)
  end
  a0=a0*(1-q)+a1*q
  p0[i]=a0%1
 end
 
 -- head
 p0[8]=p0[8]*(1-q)+p1[8]*q
end


function flip_pose(p)
 for j=0,1 do
  for i=0,1 do
   p[j*4+i+0],p[j*4+i+2]=
   p[j*4+i+2],p[j*4+i+0]
  end
 end
 for i=0,7 do
  p[i]=(0.5-p[i])%1
 end
 
-- p[8]*=-1
 p[8]=0x0.ffff-p[8]
 
end




:: .info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTAyLTE4IDA2OjExOjI4Iixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNTo1OToyMCIsc3RvcmVkPSIyMDI0LTAzLTA2IDAzOjQxOjMzIix3b3Jrc3BhY2VzPXt7
bG9jYXRpb249Im1haW4ubHVhIzUxIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJib25l
cy5sdWEjNzIiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InBvc2UubHVhIix3b3Jrc3Bh
Y2VfaW5kZXg9MX0se2xvY2F0aW9uPSJnZngvMC5nZngiLHdvcmtzcGFjZV9pbmRleD0yfSx7bG9j
YXRpb249Im1hcC9tYXAwLm1hcCIsd29ya3NwYWNlX2luZGV4PTN9LHtsb2NhdGlvbj0ic2Z4L3Nm
eDAuc2Z4Iix3b3Jrc3BhY2VfaW5kZXg9NH19XV0=
:: [eoc]
