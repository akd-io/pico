picotron cartridge // www.picotron.net
version 2

:: .info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA0LTMwIDE5OjA5OjMzIixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNjowODo1NCIsc3RvcmVkPSIyMDI0LTM1LTAxIDExOjM1OjE0Iix3b3Jrc3BhY2VzPXt7
bG9jYXRpb249Im1haW4ubHVhIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJzbmlwcGV0
cy9wYWludC5sdWEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InNuaXBwZXRzL3ZwYWlu
dC5sdWEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InNuaXBwZXRzL2RvbnV0Lmx1YSIs
d29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0ic25pcHBldHMvd2hlZWwubHVhIix3b3Jrc3Bh
Y2VfaW5kZXg9MX0se2xvY2F0aW9uPSJzbmlwcGV0cy9wdWxzZS5sdWEiLHdvcmtzcGFjZV9pbmRl
eD0xfX1dXWx6NAAEAAAAAwAAADBuaWw=
:: _meta/
:: _meta/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTEwLTAxIDExOjM0OjM3Iixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNjowODo1NCIsc3RvcmVkPSIyMDI0LTM0LTAxIDExOjM0OjM3Il1dbHo0AAQAAAADAAAA
MG5pbA==
:: _meta/workspaces.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTI5LTEyIDA2OjI5OjExIixtb2RpZmllZD0iMjAyMy0w
My0wMiAyMzowMzo0NCIsbW9kaWZpZWRfdHM9IjIwMDAtMDEtMDEgMDA6MDA6MDAiLHJldmlzaW9u
PTE4NDZdXWx6NAB5AAAAMAEAAPkce3tjcHJval9maWxlPSJtYWluLmx1YSIsd29ya3NwYWNlX2lu
ZGV4PTF9LCoA73NuaXBwZXRzL3BhaW50NAADHzI0AAUfdjUACB8zNQAFT2RvbnU0AAQfNDQABV93
aGVlbDQAAx810QAGT3Vsc2U0AAFQeD02fX0=
:: snippets/
:: snippets/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTEwLTAxIDExOjM0OjM3Iixtb2RpZmllZD0iMjAyNS0w
NC0yNyAxNjowODo1NCIsc3RvcmVkPSIyMDI0LTM0LTAxIDExOjM0OjM3Il1dbHo0AAQAAAADAAAA
MG5pbA==
:: snippets/donut.lua
--[[pod_format="raw",created="2023-52-20 10:52:24",modified="2024-35-01 11:35:14",revision=48]]
cls()

for y=-20,260,12 do
	for x=-20,260, 4 do
		local dx = x-120
		local dy = y-120
		local dd = sqrt(dx*dx+dy*dy)
		local q = sin(dd/160-time()/4)*16
		if (q>0) then
			circfill(x+q,y-q,1,8+(dd/8)%8)
		end
	end
end
:: snippets/dots3d.lua
--[[pod_format="raw",created="2023-35-12 06:35:21",modified="2023-12-01 00:12:54",revision=229]]
-- 3d dot party
-- by zep
cls()

if (not pt) then
	-- make some points
	pt={}
	for y=-1,1,1/2 do
		for x=-1,1,1/2 do
			for z=-1,1,1/2 do
				p={}
				p.x=x p.y=y p.z=z
				p.col=8 + flr(x*2+y*3)%10
				add(pt,p)
			end
		end
	end
end

-- rotate point x,y by a
-- (rotates around 0,0)
function rot(x,y,a)
	local x0=x
	x = cos(a)*x - sin(a)*y
	y = cos(a)*y + sin(a)*x0 -- *x is wrong but kinda nice too
	return x,y
end
	
	
	for p in all(pt) do
		--transform:
		--world space -> camera space
		
		p.cx,p.cz=rot(p.x,p.z,t()/8)
		p.cy,p.cz=rot(p.y,p.cz,t()/7)
		
		p.cz += 2 + cos(t()/6)
	end
	
	-- sort furthest -> closest
	-- (so that things in distance
	-- aren't drawn over things
	-- in the foreground)
	
	for pass=1,4 do
	for i=1,#pt-1 do
		if pt[i].cz < pt[i+1].cz then
			--swap
			pt[i],pt[i+1]=pt[i+1],pt[i]
		end
	end
	for i=#pt-1,1,-1 do
		if pt[i].cz < pt[i+1].cz then
			--swap
			pt[i],pt[i+1]=pt[i+1],pt[i]
		end
	end
	end
	
	rad1 = 5+cos(t()/4)*4
	for p in all(pt) do
		--transform:
		--camera space -> screen space
		sx = 120 + p.cx*64/p.cz
		sy = 120 + p.cy*64/p.cz
		rad= rad1/p.cz
		-- draw
		
		if (p.cz > .1) then
			circfill(sx,sy,rad,p.col)
			circfill(sx+rad/3,sy-rad/3,rad/3,7)
		end
	end

:: snippets/jumble.lua
--[[pod_format="raw",created="2023-32-31 22:32:01",modified="2023-55-31 23:55:45",revision=11]]
-- jumble pixels

for i=0,2500 do

	-- choose a random point
	local y=rnd(240)
	local x=rnd(240)
	
	-- choose a random neighbour
	local a=(rnd(4)\1)/4
	local x2,y2 = x+cos(a),y+sin(a)
	
	-- swap the two pixels
	local c=pget(x,y)
	pset(x,y,pget(x2,y2))
	pset(x2,y2,c)
end

:: snippets/magnet.lua
--[[pod_format="raw",created="2023-21-31 22:21:30",modified="2023-56-31 23:56:01",revision=48]]
cls()

for y=0,240,10 do
for x=0,240,10 do

	-- angle between mouse and point
	local a = atan2(mx - x, my - y)
	
	-- draw a line in that direction
	line(x,y, x+cos(a)*7, y+sin(a)*7, 14)

end
end

:: snippets/paint.lua
--[[pod_format="raw",created="2023-34-12 06:34:53",modified="2024-35-01 11:35:14",revision=82]]
--	paint on the output image

if mb > 0 then
	circfill(mx, my, 10, 8 + (t()*10)%8)
end
:: snippets/pulse.lua
--[[pod_format="raw",created="2023-31-20 10:31:51",modified="2024-35-01 11:35:14",revision=57]]
cls()
circ(120,120,40+cos(t())*10,7)

:: snippets/sand.lua
--[[pod_format="raw",created="2023-32-20 10:32:04",modified="2023-12-01 00:12:58",revision=20]]
q = q and (q+2)%9 or 0

for y=239-q%3,0,-3 do
for x=0+q\3,239,3 do
	if (pget(x,y)==0) then
 		pset(x,y,pget(x,y-1))
 		pset(x,y-1,0)
 	end
end
end

:: snippets/vpaint.lua
--[[pod_format="raw",created="2023-34-12 06:34:53",modified="2024-35-01 11:35:14",revision=82]]
-- vaporize the output bitmap
for i=1,2000 do
	local x,y = rnd(240),rnd(240)
	circfill(x,y,rnd(1.5)^2,
		max(0,pget(x,y+5)*.8))
end

col = col or 0
if mb > 0 then
 	col = (col + 1/2) % 10
	-- lerp
	for i=0,1,1/16 do
		circfill(
			last_mx*i + mx*(1-i), 
			last_my*i + my*(1-i), 
			10, 8 + col)
	end
end
last_mx, last_my, last_mb = mx,my,mb
:: snippets/wheel.lua
--[[pod_format="raw",created="2023-19-01 00:19:38",modified="2024-35-01 11:35:14",revision=41]]
cls()
for i=31,1,-1 do
	circfill(
		120 + cos(t()+i/5)*5,
		120 + sin(t()+i/5)*5,
		i*3, i)
end


:: main.lua
--[[pod_format="raw",created="2023-30-12 06:30:01",modified="2024-35-01 11:35:14",revision=718]]
--[[
	proggy: demonstrate live code loading and editor gui

	to view the snippets:
	
		cd /ram/cart/snippets
		ls
		edit foo.lua
]]

function _init()
	g = create_gui()
	ce = g:attach_text_editor{x=8,y=20,width=215,height=200,
		markup=true,embed_pods=true,syntax_highlighting=true}
	ce:attach_scrollbars{autohide=true}
	ce:set_text{"cls()","circ(120,120,40+cos(t())*10,7)"}

	bmp = userdata("u8",240, 240)
	
	create_snippet_buttons()
	
end


function _draw()
	cls(5)
		
	g:update_all()

	
	-- recompile bytecode every frame!
	-- if there is a syntax error, newfunc will be nil and we can ignore it
	local prog = table.concat(ce:get_text(),"\n")
	local newfunc = load(prog)
	if (newfunc) func = newfunc
	
	-- some globals for the proglet to use
	mx,my,mb = mouse()
	mx -= 232  my -= 20
	
	-- draw code editor
	g:draw_all() 
	
	-- run the proglet and show the output
	set_draw_target(bmp)
	if (func) coresume(cocreate(func))
	set_draw_target()
	blit(bmp, nil, 0, 0, 232, 20)
	
	-- show fps
	print(string.format("cpu:%.3f",stat(1)), 420,5,13)
end

function create_snippet_buttons()

	snippet=ls("snippets")
	-- table.sort(snippet) -- perhaps won't be supported (requires c call boundary)
	
	local xx = 10
	local yy = 230
	for i=1,#snippet do
		local el = g:attach_button({x=xx,y=yy,label=sub(snippet[i],1,-5), 
			bgcol=0x0706, fgcol=0x090d,
			tap=function()
				local text = fetch("snippets/"..snippet[i])
				ce:set_text(split(text,"\n"))
			end})
		xx += el.width + 4
		if (xx > 200) then
			xx = 10
			yy +=16
		end
	end
	
end

:: [eoc]
