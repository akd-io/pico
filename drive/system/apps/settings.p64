picotron cartridge // www.picotron.net
version 2

:: gfx/
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTEwLTAyIDA2OjQ0OjUyIixtb2RpZmllZD0iMjAyNS0w
My0yNyAwMDoxNzo0MCIscmV2aXNpb249MTEzMl1dbHo0AG0AAAAFMQAA8xR7WzBdPXtibXA9cHh1
AEMgEBAE8PAsZmxhZ3M9MCxwYW5feAgAz3k9MCx6b29tPTh9LDEA------------------------
----------------------------------------51BtPTh9fQ==
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTEwLTAyIDA2OjQ0OjIwIixtb2RpZmllZD0iMjAyNS0w
NS0xMyAxMTo0ODoxNSIsc3RvcmVkPSIyMDIzLTQ0LTAyIDA2OjQ0OjIwIl1d
:: map/
:: map/0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTEwLTAyIDA2OjQ0OjUyIixtb2RpZmllZD0iMjAyNS0w
My0yNyAwMDoxNzo0MCIscmV2aXNpb249MTEyNV1dbHo0AGgAAABYEAAA8Ah7e2JtcD11c2VyZGF0
YSgiaTE2IiwzMgMALyIwAQD--------------------78QgiKSxoaWRkZW49ZmFsc2UscGFuX3g9
MAgA0nk9MCx0aWxlX2g9MTYKABB3CgCAem9vbT0xfX0=
:: map/map0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTQ4LTA0IDE2OjQ4OjAxIixtb2RpZmllZD0iMjAyNC00
OC0wNCAxNjo0ODowMSIscmV2aXNpb249MF1dbHo0AGkAAACjCAAA8BN7bGF5ZXI9e1swXT17Ym1w
PXVzZXJkYXRhKCJpMTYiLDE2AwAvIjABAP---__hIikscGFuX3g9MAgA8gZ5PTAsc2NhbGU9MSx0
aWxlX2g9MTYKAG93PTE2fSxLBP----84UDE2fX19
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTEwLTAyIDA2OjQ0OjIwIixtb2RpZmllZD0iMjAyNS0w
NS0xMyAxMTo0ODoxNSIsc3RvcmVkPSIyMDIzLTQ0LTAyIDA2OjQ0OjIwIl1d
:: sfx/
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTEwLTAyIDA2OjQ0OjUyIixtb2RpZmllZD0iMjAyNS0w
My0yNyAwMDoxNzo0MCIscmV2aXNpb249MTA4MV1dbHo0AHAAAADuBwAA33B4dQADKAAABAAE8P8B
AOz-J-EBEAYPIBABIAEgAfAAAhACDhABIA8hIAEwD0Dwww8oD--wxg-4Cg--D4AP9w8NAfAJARAG
DjAA-zkf-wEA3M-4D0AADxBA--_w8HALAP--ox--AQD-mVD-----IA==
:: sfx/sfx0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTQ4LTA0IDE2OjQ4OjAxIixtb2RpZmllZD0iMjAyNC00
OC0wNCAxNjo0ODowMSIscmV2aXNpb249MF1dbHo0ABABAABRBwAA8CdweHUAAygAAAMABA9AEAIO
AAGgASACoA4ADxAADfDKAQIDBAUGBwEP-5AICQoLDwwPDQ8ODw8QAPAADQ8RDxIPEw8UDxUPFg8X
EwDxAQ8YDxkPGg8bDxwPHQ8eDx8UAPEAIA8hDyIPIw8kDyUPJg8nFADxACgPKQ8qDysPLA8tDy4P
LxQA8QAwDzEPMg8zDzQPNQ82DzcUAP8FOA85DzoPOw88Dz0PPg8-AQ--8P8BAOv-J1oBEAYPIBAB
IAEgAfAAAhACDBABIA8hIAEwD0Dwww8oD--wxg-4Cg--D4AP9w8NAfAJARAGDDAA-zkf-wEA3L-4
D0AADUD--7DwcAoA--9kH-8BAJdQ-----x8=
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDIzLTEwLTAyIDA2OjQ0OjIwIixtb2RpZmllZD0iMjAyNS0w
NS0xMyAxMTo0ODoxNSIsc3RvcmVkPSIyMDIzLTQ0LTAyIDA2OjQ0OjIwIl1d
:: main.lua
--[[pod_format="raw",created="2023-10-02 06:44:52",modified="2025-03-27 00:17:40",revision=1562]]
-- picotron settings
-- a8: tabbed

page = 1
sdat = {}


function create_checkbox(x, y, label, key)
	local el = {
		x = x, y = y,
		width = 98,
		height  = 12,
		label = label,
		key = key,
		cursor = "pointer"
	}
	
	function el:draw()
		rect(0,0,8,8,1)
		if (sdat[key]) rectfill(2,2,6,6,1)
		print(label, 15, 1, 13)
	end
	
	function el:click()
		sdat[key] = not sdat[key]
		store_settings()
	end
	
	return el
end

function create_chooser(parent, x, y, key, path)

	local el = parent:attach{
		x = x, y = y,
		width = 96,
		height=60,
		key=key,
		path=path,
		squash_to_clip=true
	}
	
	local item_h = 12
	
	function el:draw()
		rectfill(0,0,self.width-1, self.height-1,1)
		local rect = {clip()}
		print("\014\^i "..self.key.." ",1,-6,13)
		clip(unpack(rect))
	end

	local path1 = path


	-- custom folder
	if (fstat("/appdata"..path) == "folder") then
		path1 = "/appdata"..path
	end
	files = ls(path1) or {}
	
	
	local item = {}
	if (path == "/system/themes") then
		add(item, {label = "[custom]", filename = "/appdata/system/theme.pod"})
	end

	if (path == "/system/screensavers") then
		add(item, {label = "[none]", filename = nil})
	end
	
	for i=1, #files do
		add(item, {label = split(files[i],".")[1], filename = path1.."/"..files[i]})
	end
	
	local contents = el:attach{
		x = 0, y = 0,
		width = 80, height = 8 + #item * item_h,
		item = item
	}
	
	function contents:draw()
		for i = 1, #self.item do
			local item = self.item[i]
			local yy = 4 + (i-1)*item_h
			color(6)
			if (item.filename == sdat[key]) rectfill(0,yy-1,self.width-1,yy+8) color(1)
			print(item.label, 3, yy)
		end
	end
	
	function contents:click(msg)
		local i = mid(1, 1 + (msg.my - 4) \ item_h, #self.item)
		newi = i ~= last_i last_i = i
		
		-- act on selection (can return early to reject change)
		
		-- theme change: copy over system default
		if (path == "/system/themes") then
			local tdat = fetch(self.item[i].filename)
			if (tdat) store("/ram/shared/theme.pod", tdat)
		end
		
		-- desktop change: kill process and start new one (!)
		if (path == "/system/wallpapers") then
			send_message(3, {event="set_wallpaper", wallpaper = self.item[i].filename})
		end	
		
		-- store change in system settings
		-- theme, wallpaper and screensaver are all full path filenames
		
		sdat[key] = self.item[i].filename
		store_settings()
		
	end
	
	function contents:doubleclick(msg)
		local i = mid(1, 1 + (msg.my - 4) \ item_h, #self.item)
		if (newi) return -- don't count as a double click
		
		if (key=="screensaver" and sdat.screensaver) send_message(3, {event="test_screensaver"})
		
		if (key=="theme") then
			-- copy over system default and edit that
			sdat.theme = "/appdata/system/theme.pod"
			store_settings()
			
			local tdat = fetch(self.item[i].filename)
			if (tdat) store("/appdata/system/theme.pod", tdat)
			create_process("/system/apps/themed.p64", {argv={"/appdata/system/theme.pod"}})
		end
	end
	
	
	el:attach_scrollbars{autohide=true}

	return el
end

function create_tab_button(el)
	el.width = #el.label * 5 + 8
	el.height = 11
	el.cursor = "pointer"
	function el:draw(msg)
		local yy = (msg.has_pointer and msg.mb > 0) and 1 or 0
		rectfill(0,yy+1,self.width-1,self.height-1,page == el.page and 7 or 6)
		rectfill(1,yy+0,self.width-2,self.height-1,page == el.page and 7 or 6)
		
		print(el.label,4,yy+2,1)
	end
	function el:tap()
		page = self.page
		generate_gui()
	end
	return el
end

function generate_gui()
	gui = create_gui()
	
	local x = 2
	local spacing = 2
	x += gui:attach(create_tab_button{label="Desktop",page=1,x=x,y=1}).width + spacing
--	x += gui:attach(create_tab_button{label="Screensaver",page=2,x=x,y=1}).width + spacing
	x += gui:attach(create_tab_button{label="Audio",page=3,x=x,y=1}).width + spacing
	x += gui:attach(create_tab_button{label="Video",page=4,x=x,y=1}).width + spacing
	x += gui:attach(create_tab_button{label="System",page=5,x=x,y=1}).width + spacing
	
	local x, y = 6,10
	local y0 = y
	local x2 = 108
	local line_h = 12
	
	local container = gui:attach{
		x=0,y=12,
		width_rel=1.0,
		height_rel=1.0,height_add=-12
	}
	local pane = container:attach{
		x=0,y=0,
		width_rel=1.0,height=300
	}
--	container:attach_scrollbars()

	-- desktop
	if (page == 1) then
		pane:attach(create_checkbox(x,y, "Squishy Windows", "squishy_windows")) y += line_h
		pane:attach(create_checkbox(x, y, "Sparkles",       "sparkles")) y += line_h
		
		x=106 y=y0
		pane:attach(create_checkbox(x, y, "Low-Colour Icons", "lowcol_icons")) y += line_h
		pane:attach(create_checkbox(x, y, "RSHIFT Magnify", "rshift_magnify")) y += line_h
		
		create_chooser(pane, 6, 60, "theme", "/system/themes")
		create_chooser(pane, 108, 60, "wallpaper", "/system/wallpapers")
	end
	
	
	-- audio
	if (page == 3) then
		pane:attach(create_checkbox(x, y, "Mute", "mute_audio")) y += line_h
		pane:attach(create_checkbox(x, y, "Swap Stereo", "swap_stereo")) y += line_h
	end
	
	-- video
	if (page == 4) then
		pane:attach(create_checkbox(x, y, "Fullscreen", "fullscreen")) y += line_h
		pane:attach(create_checkbox(x, y, "Pixel Perfect", "pixel_perfect")) y += line_h
		pane:attach(create_checkbox(x, y, "Stretch", "stretch")) y += line_h
		x=106 y=y0
		pane:attach(create_checkbox(x, y, "Allow High DPI", "allow_highdpi")) y += line_h
		pane:attach(create_checkbox(x, y, "Fullscreen:Window", "fullscreen_window")) y += line_h
		
		create_chooser(pane, 6, 60, "screensaver", "/system/screensavers")
	end
	
	if (page == 5) then
		pane:attach(create_checkbox(x, y, "Network", "network_access")) y += line_h
		pane:attach(create_checkbox(x, y, "Battery Saver", "battery_saver")) y += line_h
		pane:attach(create_checkbox(x, y, "Anywhen", "anywhen")) y += line_h
		pane:attach(create_checkbox(x, y, "CTRL-Q Shutdown", "fastquit")) y += line_h
	
	end


	
end

function store_settings()
	--printh("storing settings: "..pod(sdat))
	store("/appdata/system/settings.pod", sdat)
end

function _init()

	window{
		width=210,
		height=140,
		max_width=220,
		max_height=160,
		title="System Settings",
		resizeable = true
	}
	
	poke(0x4000, get(fetch"/system/fonts/lil.font"))
	
	sdat = fetch"/appdata/system/settings.pod" or {}
	
	generate_gui()
end

function _draw()
	cls(13)
	color(5)
	
	rectfill(0,12,1000,1000,7)
	
--[[
	local yy = 67
	local prefix = ""--"\128\-j"
	
	if (page == 1) then
		print("Video",10,5)
		print("Audio",105,5)
		
		print(prefix.."Theme",10,yy)
		print(prefix.."Wallpaper",105,yy)
	else
		print("System",10,5)
		print(prefix.."Screensaver",10,yy)
		print(prefix.."Experimental",105,yy)
	end
]]
	
	gui:draw_all()
end

function _update()
	gui:update_all()
end

-- reload changes
on_event("modified:/appdata/system/settings.pod", function(msg)
	sdat = fetch(msg.filename) or sdat or {}
end)


:: .info.pod
b64$LS1bW3BvZCxhdXRob3I9InplcCIsY3JlYXRlZD0iMjAyNC0wNC0xMiAwMjoxNjowNyIsaWNv
bj11c2VyZGF0YSgidTgiLDE2LDE2LCIwMDAwMDAwMTAxMDEwMTAxMDEwMTAxMDEwMTAwMDAwMDAw
MDAwMTA3MDcwNzA3MDcwNzA3MDcwNzA3MDEwMDAwMDAwMTA3MTExMTExMTExMTExMTExMTExMTEw
NzAxMDAwMTA3MTExMTExMTExMTExMTExMTExMTExMTExMDcwMTAxMDcxMTExMTExMTExMTExMTA3
MDcxMTExMTEwNzAxMDEwNzExMTEwMTAxMDEwMTAxMDcwNzAxMTExMTA3MDEwMTA3MTExMTExMTEx
MTExMTEwNzA3MTExMTExMDcwMTAxMDcxMTExMTEwNzA3MTExMTExMTExMTExMTEwNzAxMDEwNzEx
MTEwMTA3MDcwMTAxMDEwMTAxMTExMTA3MDEwMTA3MTExMTExMDcwNzExMTExMTExMTExMTExMDcw
MTAxMDcxMTExMTExMTExMTExMTExMTExMTExMTEwNzAxMDEwNjA3MTExMTExMTExMTExMTExMTEx
MTEwNzA2MDEwMTA2MDYwNzA3MDcwNzA3MDcwNzA3MDcwNzA2MDYwMTAwMDEwNjA2MDYwNjA2MDYw
NjA2MDYwNjA2MDYwMTAwMDAwMDAxMDYwNjA2MDYwNjA2MDYwNjA2MDYwMTAwMDAwMDAwMDAwMTAx
MDEwMTAxMDEwMTAxMDEwMTAwMDAwMCIpLG1vZGlmaWVkPSIyMDI1LTA1LTEzIDExOjQ4OjE1Iixu
b3Rlcz0iIixydW50aW1lPTE2LHN0b3JlZD0iMjAyNC0wMy0yMyAxODozNjowOCIsdGl0bGU9IlBp
Y290cm9uIFNldHRpbmdzIix2ZXJzaW9uPSIiLHdvcmtzcGFjZXM9e3tsb2NhdGlvbj0ibWFpbi5s
dWEjMTg4Iix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJnZngvMC5nZngiLHdvcmtzcGFj
ZV9pbmRleD0yfSx7bG9jYXRpb249Im1hcC8wLm1hcCIsd29ya3NwYWNlX2luZGV4PTN9LHtsb2Nh
dGlvbj0ic2Z4LzAuc2Z4Iix3b3Jrc3BhY2VfaW5kZXg9NH19XV0=
:: [eoc]
